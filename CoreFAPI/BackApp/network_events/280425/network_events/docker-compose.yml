services:
  app:
    build: .
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - ./:/app
    env_file:
      - .env
    depends_on:
      - db
      - redis
      - rabbitmq
      - mock_auth
    command: >
      uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    deploy:
      resources:
        limits:
          memory: 512M
    networks:
      - backend

  mock_auth:
    build:
      context: ../mock_auth
    container_name: mock_auth
    ports:
      - "8080:8080"
    command: >
      uvicorn main:app --host 0.0.0.0 --port 8080 --reload
    networks:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    restart: unless-stopped

  db:
    image: postgres:15
    container_name: network_events_db
    environment:
      POSTGRES_DB: events_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - backend

  redis:
    image: redis:7
    container_name: network_events_redis
    ports:
      - "6379:6379"
    networks:
      - backend

  rabbitmq:
    image: rabbitmq:3-management
    container_name: network_events_rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - backend

volumes:
  pgdata:

networks:
  backend:
    driver: bridge
