definitions:
  dto.LoginRequest:
    properties:
      email:
        type: string
      password:
        maxLength: 20
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  dto.RegisterRequest:
    properties:
      email:
        type: string
      firstName:
        minLength: 2
        type: string
      lastName:
        minLength: 2
        type: string
      password:
        maxLength: 20
        minLength: 8
        type: string
    required:
    - email
    - firstName
    - lastName
    - password
    type: object
  dto.RegisterResponce:
    properties:
      id:
        type: string
    type: object
  dto.UpdateRequest:
    properties:
      email:
        type: string
      firstName:
        minLength: 2
        type: string
      lastName:
        minLength: 2
        type: string
      password:
        maxLength: 20
        minLength: 8
        type: string
      phone:
        type: string
    required:
    - email
    - firstName
    - lastName
    - password
    - phone
    type: object
  entity.User:
    properties:
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      password:
        type: string
      phone:
        type: string
      roles:
        description: 'TODO: на данный момент ролей нет в БД, они вообще не определены'
        items:
          type: string
        type: array
      userName:
        type: string
      uuid:
        type: string
    type: object
  httpAdapter.BaseHandlerResponce:
    properties:
      error:
        type: string
      message:
        type: string
      status:
        type: integer
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:8010
info:
  contact:
    email: evanstrein@icloud.com
    name: Evans Trein
    url: https://github.com/EvansTrein
  description: |-
    The service allows you to create a user, edit, delete
    You can log in and log out and sessions will be created and deleted
  title: Registration and authorisation services
  version: "0.2"
paths:
  /data/u/{uuid}:
    get:
      description: Searches for a user by id and returns it
      parameters:
      - description: User UUID
        example: 123e4567-e89b-12d3-a456-426614174000
        format: uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.User'
        "400":
          description: Incorrect uuid format
          schema:
            $ref: '#/definitions/httpAdapter.BaseHandlerResponce'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/httpAdapter.BaseHandlerResponce'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/httpAdapter.BaseHandlerResponce'
        "504":
          description: Gateway timeout
          schema:
            $ref: '#/definitions/httpAdapter.BaseHandlerResponce'
      summary: Get user info
      tags:
      - data
  /login:
    post:
      consumes:
      - application/json
      description: User login, user search by mail, user session creation, session
        data embedded in cookies
      parameters:
      - description: Login user request body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.RegisterResponce'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/httpAdapter.BaseHandlerResponce'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/httpAdapter.BaseHandlerResponce'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/httpAdapter.BaseHandlerResponce'
        "504":
          description: Gateway timeout
          schema:
            $ref: '#/definitions/httpAdapter.BaseHandlerResponce'
      summary: Login
      tags:
      - auth
  /logout:
    post:
      description: User logout and session deletion
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/httpAdapter.BaseHandlerResponce'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/httpAdapter.BaseHandlerResponce'
        "504":
          description: Gateway timeout
          schema:
            $ref: '#/definitions/httpAdapter.BaseHandlerResponce'
      security:
      - SessionAuth: []
      summary: Logout
      tags:
      - auth
  /register:
    post:
      consumes:
      - application/json
      description: Register new user with provided data. All fields are required except
        "phone"
      parameters:
      - description: Register user request body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.RegisterResponce'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/httpAdapter.BaseHandlerResponce'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/httpAdapter.BaseHandlerResponce'
        "504":
          description: Gateway timeout
          schema:
            $ref: '#/definitions/httpAdapter.BaseHandlerResponce'
      summary: Registration
      tags:
      - auth
  /user:
    delete:
      description: Searches for a user by id (takes it from the session load) and
        deletes it and its session
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/httpAdapter.BaseHandlerResponce'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/httpAdapter.BaseHandlerResponce'
        "504":
          description: Gateway timeout
          schema:
            $ref: '#/definitions/httpAdapter.BaseHandlerResponce'
      security:
      - SessionAuth: []
      summary: Delete user
      tags:
      - user
    get:
      description: Searches for a user by id (pulls it from the session load) and
        returns it
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.User'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/httpAdapter.BaseHandlerResponce'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/httpAdapter.BaseHandlerResponce'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/httpAdapter.BaseHandlerResponce'
        "504":
          description: Gateway timeout
          schema:
            $ref: '#/definitions/httpAdapter.BaseHandlerResponce'
      security:
      - SessionAuth: []
      summary: Get user info
      tags:
      - user
    put:
      consumes:
      - application/json
      description: Searches for a user by id (pulls it from the session load) and
        updates it
      parameters:
      - description: ALL user data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateRequest'
      responses:
        "204":
          description: No Content
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/httpAdapter.BaseHandlerResponce'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/httpAdapter.BaseHandlerResponce'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/httpAdapter.BaseHandlerResponce'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/httpAdapter.BaseHandlerResponce'
        "504":
          description: Gateway timeout
          schema:
            $ref: '#/definitions/httpAdapter.BaseHandlerResponce'
      security:
      - SessionAuth: []
      summary: Update user info
      tags:
      - user
schemes:
- http
securityDefinitions:
  SessionAuth:
    in: cookie
    name: session_id
    type: apiKey
swagger: "2.0"
