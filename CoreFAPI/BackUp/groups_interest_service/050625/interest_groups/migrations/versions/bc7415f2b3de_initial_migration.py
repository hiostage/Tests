"""Initial migration

Revision ID: bc7415f2b3de
Revises: 
Create Date: 2025-05-25 12:37:07.961640

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'bc7415f2b3de'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users_cache',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=True),
    sa.Column('first_name', sa.String(length=50), nullable=True),
    sa.Column('last_name', sa.String(length=50), nullable=True),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('last_sync_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='Дата создания записи'),
    sa.Column('updated_at', sa.DateTime(), nullable=True, comment='Дата последнего обновления'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_cache_email'), 'users_cache', ['email'], unique=False)
    op.create_index(op.f('ix_users_cache_id'), 'users_cache', ['id'], unique=False)
    op.create_index(op.f('ix_users_cache_username'), 'users_cache', ['username'], unique=False)
    op.create_table('groups',
    sa.Column('id', sa.Integer(), nullable=False, comment='Уникальный идентификатор'),
    sa.Column('name', sa.String(length=100), nullable=False, comment='Название группы'),
    sa.Column('slug', sa.String(length=120), nullable=True, comment='ЧПУ для URL'),
    sa.Column('description', sa.Text(), nullable=True, comment='Описание группы'),
    sa.Column('category', sa.String(length=50), nullable=True, comment='Категория группы'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='Дата создания'),
    sa.Column('updated_at', sa.DateTime(), nullable=True, comment='Дата обновления'),
    sa.Column('creator_id', sa.String(), nullable=True, comment='ID создателя'),
    sa.Column('is_public', sa.Boolean(), nullable=True, comment='Публичная ли группа'),
    sa.Column('banner_url', sa.String(length=255), nullable=True, comment='URL баннера группы'),
    sa.Column('rules', sa.Text(), nullable=True, comment='Правила группы'),
    sa.Column('tags', sa.JSON(), nullable=True, comment='Теги группы'),
    sa.Column('member_count', sa.Integer(), nullable=True, comment='Количество участников'),
    sa.ForeignKeyConstraint(['creator_id'], ['users_cache.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_groups_category'), 'groups', ['category'], unique=False)
    op.create_index(op.f('ix_groups_created_at'), 'groups', ['created_at'], unique=False)
    op.create_index(op.f('ix_groups_creator_id'), 'groups', ['creator_id'], unique=False)
    op.create_index(op.f('ix_groups_id'), 'groups', ['id'], unique=False)
    op.create_index(op.f('ix_groups_name'), 'groups', ['name'], unique=True)
    op.create_index(op.f('ix_groups_slug'), 'groups', ['slug'], unique=True)
    op.create_table('group_members',
    sa.Column('group_id', sa.Integer(), nullable=False, comment='ID группы'),
    sa.Column('user_id', sa.String(), nullable=False, comment='ID пользователя'),
    sa.Column('joined_at', sa.DateTime(), nullable=True, comment='Дата вступления'),
    sa.Column('role', sa.String(length=50), nullable=True, comment='Роль в группе'),
    sa.Column('is_banned', sa.Boolean(), nullable=True, comment='Забанен ли пользователь'),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users_cache.id'], ),
    sa.PrimaryKeyConstraint('group_id', 'user_id')
    )
    op.create_table('posts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False, comment='Заголовок поста'),
    sa.Column('content', sa.Text(), nullable=False, comment='Содержание поста'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='Дата создания'),
    sa.Column('updated_at', sa.DateTime(), nullable=True, comment='Дата обновления'),
    sa.Column('author_id', sa.String(), nullable=True, comment='ID автора'),
    sa.Column('group_id', sa.Integer(), nullable=True, comment='ID группы'),
    sa.Column('is_pinned', sa.Boolean(), nullable=True, comment='Закреплен ли пост'),
    sa.Column('status', sa.String(length=20), nullable=True, comment='Статус поста'),
    sa.Column('tags', sa.JSON(), nullable=True, comment='Теги поста'),
    sa.Column('views_count', sa.Integer(), nullable=True, comment='Количество просмотров'),
    sa.Column('last_activity_at', sa.DateTime(), nullable=True, comment='Последняя активность'),
    sa.Column('edited_by', sa.String(), nullable=True, comment='Кто редактировал'),
    sa.Column('edit_reason', sa.String(length=200), nullable=True, comment='Причина редактирования'),
    sa.ForeignKeyConstraint(['author_id'], ['users_cache.id'], ),
    sa.ForeignKeyConstraint(['edited_by'], ['users_cache.id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_posts_author_id'), 'posts', ['author_id'], unique=False)
    op.create_index(op.f('ix_posts_created_at'), 'posts', ['created_at'], unique=False)
    op.create_index(op.f('ix_posts_group_id'), 'posts', ['group_id'], unique=False)
    op.create_index(op.f('ix_posts_id'), 'posts', ['id'], unique=False)
    op.create_index(op.f('ix_posts_status'), 'posts', ['status'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_posts_status'), table_name='posts')
    op.drop_index(op.f('ix_posts_id'), table_name='posts')
    op.drop_index(op.f('ix_posts_group_id'), table_name='posts')
    op.drop_index(op.f('ix_posts_created_at'), table_name='posts')
    op.drop_index(op.f('ix_posts_author_id'), table_name='posts')
    op.drop_table('posts')
    op.drop_table('group_members')
    op.drop_index(op.f('ix_groups_slug'), table_name='groups')
    op.drop_index(op.f('ix_groups_name'), table_name='groups')
    op.drop_index(op.f('ix_groups_id'), table_name='groups')
    op.drop_index(op.f('ix_groups_creator_id'), table_name='groups')
    op.drop_index(op.f('ix_groups_created_at'), table_name='groups')
    op.drop_index(op.f('ix_groups_category'), table_name='groups')
    op.drop_table('groups')
    op.drop_index(op.f('ix_users_cache_username'), table_name='users_cache')
    op.drop_index(op.f('ix_users_cache_id'), table_name='users_cache')
    op.drop_index(op.f('ix_users_cache_email'), table_name='users_cache')
    op.drop_table('users_cache')
    # ### end Alembic commands ###
