// Code generated by MockGen. DO NOT EDIT.
// Source: sessionsRepo.go

// Package mocksRepository is a generated GoMock package.
package mocksRepository

import (
	context "context"
	reflect "reflect"

	dto "gitea.youteam.space/YouTeam/go/internal/dto"
	gomock "github.com/golang/mock/gomock"
)

// MockISessionsRepo is a mock of ISessionsRepo interface.
type MockISessionsRepo struct {
	ctrl     *gomock.Controller
	recorder *MockISessionsRepoMockRecorder
}

// MockISessionsRepoMockRecorder is the mock recorder for MockISessionsRepo.
type MockISessionsRepoMockRecorder struct {
	mock *MockISessionsRepo
}

// NewMockISessionsRepo creates a new mock instance.
func NewMockISessionsRepo(ctrl *gomock.Controller) *MockISessionsRepo {
	mock := &MockISessionsRepo{ctrl: ctrl}
	mock.recorder = &MockISessionsRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockISessionsRepo) EXPECT() *MockISessionsRepoMockRecorder {
	return m.recorder
}

// CreateSession mocks base method.
func (m *MockISessionsRepo) CreateSession(ctx context.Context, payload *dto.SessionPayload) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateSession", ctx, payload)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateSession indicates an expected call of CreateSession.
func (mr *MockISessionsRepoMockRecorder) CreateSession(ctx, payload interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateSession", reflect.TypeOf((*MockISessionsRepo)(nil).CreateSession), ctx, payload)
}

// DeleteSession mocks base method.
func (m *MockISessionsRepo) DeleteSession(ctx context.Context, sessionID string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteSession", ctx, sessionID)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteSession indicates an expected call of DeleteSession.
func (mr *MockISessionsRepoMockRecorder) DeleteSession(ctx, sessionID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteSession", reflect.TypeOf((*MockISessionsRepo)(nil).DeleteSession), ctx, sessionID)
}

// GetSession mocks base method.
func (m *MockISessionsRepo) GetSession(ctx context.Context, sessionID string) (*dto.SessionPayload, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSession", ctx, sessionID)
	ret0, _ := ret[0].(*dto.SessionPayload)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSession indicates an expected call of GetSession.
func (mr *MockISessionsRepoMockRecorder) GetSession(ctx, sessionID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSession", reflect.TypeOf((*MockISessionsRepo)(nil).GetSession), ctx, sessionID)
}
