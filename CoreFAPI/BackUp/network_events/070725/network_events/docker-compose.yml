services:
  app:
    build: .
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - ./:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    command: >
      uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    deploy:
      resources:
        limits:
          memory: 512M
    networks:
      - backend

  db:
    image: postgres:15
    container_name: network_events_db
    environment:
      POSTGRES_DB: events_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - backend
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "user", "-d", "events_db"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

  redis:
    image: redis:7
    container_name: network_events_redis
    ports:
      - "6379:6379"
    networks:
      - backend
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s
      

  rabbitmq:
    image: rabbitmq:3-management
    container_name: network_events_rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s
    networks:
      - backend

volumes:
  pgdata:

networks:
  backend:
    external: true
